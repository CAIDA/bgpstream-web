CAIDA\BGPStreamWeb\DataBrokerBundle\Entity\Collector:
    type: entity
    table: collectors
    readOnly: true
    repositoryClass: CAIDA\BGPStreamWeb\DataBrokerBundle\Repository\CollectorRepository
    indexes:
        project_id:
            columns:
                - project_id
    uniqueConstraints:
        name:
            columns:
                - name
        path:
            columns:
                - path
    id:
        id:
            type: integer
            nullable: false
            unsigned: false
            comment: ''
            id: true
            generator:
                strategy: IDENTITY
    fields:
        name:
            type: string
            nullable: false
            length: 50
            fixed: false
            comment: ''
        path:
            type: string
            nullable: false
            length: 50
            fixed: false
            comment: ''
    manyToOne:
        project:
            targetEntity: Project
            cascade: {  }
            fetch: EAGER
            mappedBy: null
            inversedBy: collectors
            joinColumns:
                project_id:
                    referencedColumnName: id
            orphanRemoval: false
    manyToMany:
        dumpInfos:
            targetEntity: DumpInfo
            fetch: EAGER
            inversedBy: null
            joinTable:
                name: collector_type
                joinColumns:
                    collector_id:
                        referencedColumnName: id
                inverseJoinColumns:
                    id:
                        referencedColumnName: collector_type_id
        bgpTypes:
            targetEntity: BgpType
            inversedBy: collectors
            fetch: EAGER
            joinTable:
                name: collector_type
                joinColumns:
                    collector_id:
                        referencedColumnName: id
                inverseJoinColumns:
                    bgp_type_id:
                        referencedColumnName: id
    lifecycleCallbacks: {  }
